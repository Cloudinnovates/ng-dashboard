"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
require('./leaflet.js');
var NgLMapDir = (function () {
    function NgLMapDir(host) {
        this.host = host;
        this.center = [51.505, -0.09];
        this.zoom = 13;
        this.ACCESS_TOKEN = 'pk.eyJ1IjoieWFnb2xvcGV6IiwiYSI6ImNqMzdud2pidjAwczMzM3RsbmlzNm4ycGcifQ.fa75kDq4gqxpRLgT-zT9NA';
        this.urlTemplate = "https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=" + this.ACCESS_TOKEN;
        this.config = {
            maxZoom: 19,
            attribution: 'LMap, Angular Directive by <a href="https://yagolopez.github.io" target="_blank">Yago LÃ³pez</a>',
            id: 'mapbox.satellite',
            accessToken: 'pk.eyJ1IjoieWFnb2xvcGV6IiwiYSI6ImNqMzdud2pidjAwczMzM3RsbmlzNm4ycGcifQ.fa75kDq4gqxpRLgT-zT9NA'
        };
    }
    NgLMapDir.prototype.ngOnInit = function () {
        this.map = L.map(this.host.nativeElement).setView(this.center, this.zoom);
        L.tileLayer(this.urlTemplate, this.config).addTo(this.map);
    };
    return NgLMapDir;
}());
__decorate([
    core_1.Input('l-center'),
    __metadata("design:type", Array)
], NgLMapDir.prototype, "center", void 0);
__decorate([
    core_1.Input('l-zoom'),
    __metadata("design:type", Number)
], NgLMapDir.prototype, "zoom", void 0);
__decorate([
    core_1.Input('l-options'),
    __metadata("design:type", Object)
], NgLMapDir.prototype, "options", void 0);
NgLMapDir = __decorate([
    core_1.Directive({
        selector: '[l-map]',
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], NgLMapDir);
exports.NgLMapDir = NgLMapDir;
